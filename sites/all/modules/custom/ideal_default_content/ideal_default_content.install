<?php 
/**
 * Implemenation of hook_install().
 */
function ideal_default_content_install() {
   //users
  $names = array('John Lennon', 'Paul McCartney', 'George Harrison', 'Ringo Starr', 'Robert', 'Bryan', 'Michelle', 'Eleanor', 'David', 'Travis');
  $uids = _ideal_add_users($names);
  //save the uids users so we will be able to delete them on uninstall.
  variable_set('ideal_default_content_uids', $uids);
  
  //taxonomy terms
  _ideal_add_default_terms();
  
  //nodes, comments and votes.
  $nids = array();
  
  //1st challenge
  $node = (object) NULL;
  $node->type = 'challenge';
  $node->title = "workin' on a collection album";
  $node->uid = 1;
  $node->comment = 0;
  $node->body = "We workin' on a collection album and still can't deside on a name, any ideas?";
  $node->taxonomy = array(1); 
  node_save($node);
  //cck field
  $first_challenge = $node->nid;
  //save nid
  $nids[] = $node->nid;
  
  //1st idea
  $node = (object) NULL;
  $node->type = 'idea';
  $node->title = 'Translate Eleanor Rigby';
  $node->uid = $uids[array_rand($uids)];
  $node->comment = 2;
  $node->body = 'Translate Eleanor Rigby to german can be cool.';
  $node->taxonomy = array(4);
  node_save($node);
  //comments
  $comment = "We don't speak German, but if you can supply a translate we can definitely can try use in our next tour";
  _ideal_add_comment($node->nid, $comment, $uids[array_rand($uids)]);
  //votes
  _ideal_add_votes($node->nid, 24);
  //save nid
  $nids[] = $node->nid;  
  
  //2nd idea
  $node = (object) NULL;
  $node->type = 'idea';
  $node->title = 'Maybe John should sing Yesterday';
  $node->uid = $uids[array_rand($uids)];
  $node->comment = 2;
  $node->body = 'Maybe John should sing Yesterday. Please vote if you like the idea ;)';
  $node->taxonomy = array(2); 
  node_save($node);
  //comments
  $comment = "WHY?? -1 here";
  _ideal_add_comment($node->nid, $comment, $uids[array_rand($uids)]);
  //votes
  _ideal_add_votes($node->nid, 8);  
  //save nid
  $nids[] = $node->nid;
  
  //3nd idea
  $node = (object) NULL;
  $node->type = 'idea';
  $node->title = 'Black album';
  $node->uid = $uids[array_rand($uids)];
  $node->comment = 2;
  $node->body = "What about the black album";
  $node->taxonomy = array(1);
  $node->field_challenge[0]['nid'] = $first_challenge;
  node_save($node);
  //comment
  $comment = "haa, bad one!";
  _ideal_add_comment($node->nid, $comment, $uids[array_rand($uids)]);
  //vote
  _ideal_add_votes($node->nid, -1);
  //save nid
  $nids[] = $node->nid;
  
  //4th idea
  $node = (object) NULL;
  $node->type = 'idea';
  $node->title = 'four';
  $node->uid = $uids[array_rand($uids)];
  $node->comment = 2;
  $node->body = 'four';
  $node->taxonomy = array(8);
  node_save($node);
  //comments
  $comment = "four ??";
  _ideal_add_comment($node->nid, $comment, $uids[array_rand($uids)]);
  //votes
  _ideal_add_votes($node->nid, 3);
  //save nid
  $nids[] = $node->nid;  
  
  //5th idea
  $node = (object) NULL;
  $node->type = 'idea';
  $node->title = '5th ??';
  $node->uid = $uids[array_rand($uids)];
  $node->comment = 2;
  $node->body = 'why?';
  $node->taxonomy = array(2); 
  node_save($node);
  //comments
  $comment = ":)";
  _ideal_add_comment($node->nid, $comment, $uids[array_rand($uids)]);
  //votes
  _ideal_add_votes($node->nid, 11);  
  //save nid
  $nids[] = $node->nid;
  
  //6th idea
  $node = (object) NULL;
  $node->type = 'idea';
  $node->title = 'yes yes';
  $node->uid = $uids[array_rand($uids)];
  $node->comment = 2;
  $node->body = "do you?";
  $node->taxonomy = array(0);
  $node->field_challenge[0]['nid'] = $first_challenge;
  node_save($node);
  //comment
  $comment = "I dont think so..";
  _ideal_add_comment($node->nid, $comment, $uids[array_rand($uids)]);
  //vote
  _ideal_add_votes($node->nid, 37);
  //save nid
  $nids[] = $node->nid;
  
  //7th idea
  $node = (object) NULL;
  $node->type = 'idea';
  $node->title = 'seven';
  $node->uid = $uids[array_rand($uids)];
  $node->comment = 2;
  $node->body = "seven?";
  $node->taxonomy = array(1);
  $node->field_challenge[0]['nid'] = $first_challenge;
  node_save($node);
  //comment
  $comment = "seven!";
  _ideal_add_comment($node->nid, $comment, $uids[array_rand($uids)]);
  //vote
  _ideal_add_votes($node->nid, 1);
  //save nid
  $nids[] = $node->nid;
  
  //8th idea
  $node = (object) NULL;
  $node->type = 'idea';
  $node->title = 'eight eight';
  $node->uid = $uids[array_rand($uids)];
  $node->comment = 2;
  $node->body = 'yes yes';
  $node->taxonomy = array(8);
  node_save($node);
  //comments
  $comment = "no, no!";
  _ideal_add_comment($node->nid, $comment, $uids[array_rand($uids)]);
  //votes
  _ideal_add_votes($node->nid, 7);
  //save nid
  $nids[] = $node->nid;  
  
  //save the nids nodes so we will be able to delete them on uninstall.
  variable_set('ideal_default_content_nids', $nids);
  
  //set the first challenge as default.
  variable_set('default_challenge', $first_challenge);
  
  //nodequeue.
  _ideal_add_queue();
  //populate nodequeues.
  _ideal_add_node_to_nodequeue($nids);
}  

function _ideal_add_users($names, $beatle = FALSE) {
  foreach($names as $name){
    $user = array(
      'name' => $name,
      'pass' => md5(user_password()),
      'mail' => str_replace(" ", ".", $name) . '@idealmail.com',
      'status' => 1,
      'init' => $beatle ? str_replace(" ", "_", $name) . '@idealmail.com' : ''
    ); 
    $user = user_save(NULL, $user);

    $uids[] = $user->uid;
  }
  return $uids; 
}

function _ideal_add_default_terms() {
  //create default term.
  $vid = db_result(db_query("SELECT vid FROM {vocabulary} WHERE module = 'features_categories'"));
  if(!$vid) {
    $vocab = array(
    'name'          => t('Categories'),
    'description'   => t('Ideas Categories'),
    'nodes'         => array('idea' => 1),
    'hierarchy'     => 0,
    'relations'     => 0,
    'tags'          => 0,
    'multiple'      => 0,
    'required'      => 1,
    'weight'        => 0,
    'module'        => 'features_categories'
    );
    taxonomy_save_vocabulary($vocab);
  }
  
  $tids = array();
  $terms_name = array(
    '0' => 'Albums',
    '1' => 'Songs',
    '2' => 'Live shows',
    '3' => 'Lyrics',
    '4' => 'Melody',
    '5' => 'Harmony',
    '6' => 'Instruments',
    '7' => 'Beats',
    '8' => 'Studio',
    '9' => 'Productions',
  );   
  foreach($terms_name as $term_name) {
    $term = array(
      'name' => $term_name,
      'vid'  => $vid,
    );
    $status = taxonomy_save_term($term);
    $output = NULL;
    if ($status) {
      $tids[] = $term['tid'];
    } 
  }
  //save the term's tids so we will be able to delete them on uninstall.
  variable_set('ideal_default_content_tids', $tids);
  
}
function _ideal_add_comment($nid, $comment, $uid = 1, $pid = 0) {
  $comment = array(
    'nid' => $nid,
    'pid' => $pid,
    'uid' => $uid,
    'comment' => $comment,
  );

  // save comments.
  comment_save($comment);
}
function _ideal_add_votes($nid, $count) {
  $votes = array();
  for ($i = 0; $i < $count; $i++) {
    $votes[] = array(
      'content_id' => $nid,
      'value_type' => 'points',
      'value' => 1,    
    );    
  }; 
  votingapi_set_votes($votes);
}

function _ideal_add_queue() {
  if(db_result(db_query("SELECT qid FROM {nodequeue_queue}"))) {
    return;
  }
  $queue_data = array(
    'focus' => array(
      'title' => 'Ideas in focus',
      'subqueue_title' => '',
      'size' => '6',
      'reverse' => 0,
      'link' => 'Add to focused',
      'link_remove' => 'Remove from focused',
      'roles' => array ( ),
      'types' => array ( 0 => 'idea',),
      'i18n' => 1,
      'op' => 'Submit',
      'submit' => 'Submit',
      'owner' => 'nodequeue',
      'show_in_links' => false,
      'show_in_tab' => true,
      'show_in_ui' => true,
      'reference' => 0,
      'subqueues' => array ( ),
      'new' => true,
      'add_subqueue' => array ( 0 => 'Ideas in focus',), // match title above
    ),
     'head_to_head' => array(
      'title' => 'Head to head',
      'subqueue_title' => '',
      'size' => '2',
      'reverse' => 0,
      'link' => 'Add to head to head',
      'link_remove' => 'Remove from head to head',
      'roles' => array ( ),
      'types' => array ( 0 => 'idea',),
      'i18n' => 1,
      'op' => 'Submit',
      'submit' => 'Submit',
      'owner' => 'nodequeue',
      'show_in_links' => false,
      'show_in_tab' => true,
      'show_in_ui' => true,
      'reference' => 0,
      'subqueues' => array ( ),
      'new' => true,
      'add_subqueue' => array ( 0 => 'Head to head',), // match title above
    ),
  );
  
  foreach ($queue_data as $q) {
    $queue = (object) $q;
    $qid = nodequeue_save($queue); // sets $queue->qid if needed.
  }  
} 

function _ideal_add_node_to_nodequeue($nids) {
  //remove the chalenge content.
  array_shift($nids);
  //populate "Idea in focus" and "Head to head" nodequeues.
  for ($i = 0; $i < 2; $i++) {
    $qid = $i + 1;
    $q = nodequeue_load($qid);
    $sq = nodequeue_load_subqueue($qid);
    for ($j = 0; $j < $q->size; $j++) {
      nodequeue_subqueue_add($q, $sq, array_shift($nids));
    }
  }
}

/**
 * Implemenation of hook_uninstall().
 */
function ideal_default_content_uninstall() {
  //delete default nodes.
  $nids = variable_get('ideal_default_content_nids', NULL);
  foreach ($nids as $nid) {
     node_delete($nid);
  }
  variable_del('ideal_default_content_nids');
  
  //delete default terms.
  $tids = variable_get('ideal_default_content_tids', NULL);
  foreach ($tids as $tid) {
     taxonomy_del_term($tid);
  }
  variable_del('ideal_default_content_tids');
  
  //delete default users.
  $uids = variable_get('ideal_default_content_uids', NULL);
  foreach ($uids as $uid) {
     user_delete(array(), $uid);
  }
  variable_del('ideal_default_content_uids');
}
