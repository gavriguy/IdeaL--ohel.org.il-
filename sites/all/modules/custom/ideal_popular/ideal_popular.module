<?php 

define('POPULAR_FLAG', 19);

/**
 *  Implementation of hook_init().
 */
function ideal_popular_init() {

}

/**
 * Implementation of hook_form_FORM_ID_alter().
 * alter the content type form.
 * @param unknown_type $form
 * @param unknown_type $form_state
 */
function ideal_popular_form_node_type_form_alter(&$form, &$form_state) {
  if ($form['#node_type']->type == 'idea') {
    $form['idea_popular_node_points'] = array(
      '#type' => 'fieldset',
      '#title' => t('Popular node points'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#description' => t(''),
      '#attributes' => array('id' => 'popular-node-type-form'),
    );
    $form['idea_popular_node_points']['popular_comment_points'] = array(
      '#type' => 'textfield',
      '#title' => t('Number of point a node gets for a new commnet added.'),
      '#default_value' => variable_get('idea_popular_comment_points', 0),
      '#weight' => -5,
    );
    $form['idea_popular_node_points']['popular_vote_points'] = array(
      '#type' => 'textfield',
      '#title' => t('Number of point a node gets for a single vote.'),
      '#default_value' => variable_get('idea_popular_vote_points', 0),
      '#weight' => -4,
    );
    $form['idea_popular_node_points']['popular_total'] = array(
      '#type' => 'textfield',
      '#title' => t('The number of points to make a different.'),
      '#default_value' => variable_get('idea_popular_total', 0),
      '#weight' => -3,
    );
    $form['idea_popular_node_points']['popular_period'] = array(
      '#type' => 'textfield',
      '#title' => t('The period of time (in seconds) to check on.'),
      '#default_value' => variable_get('idea_popular_period', 0),
      '#weight' => -2,
    );
        
    $form['#submit'][] = 'ideal_popular_idea_type_form_submit';
  }
}

/**
 * Additional submit handler for the node type form.
 */
function ideal_popular_idea_type_form_submit($form, &$form_state) {
  variable_set('idea_popular_comment_points', $form_state['values']['popular_comment_points']);
  variable_set('idea_popular_vote_points', $form_state['values']['popular_vote_points']);
  variable_set('idea_popular_total', $form_state['values']['popular_total']);
  variable_set('idea_popular_period', $form_state['values']['popular_period']);
  
}

//Don't remove:

//function ideal_popular_votingapi_insert($vote) {
//  $nid = arg(1);
//  ideal_flag_popular($nid);
//}
//
//function ideal_popular_comment(&$a1, $op) {
//  if ($op == 'insert') {
//    $nid = $a1['nid'];
//    ideal_flag_popular($nid);
//  }
//}

function ideal_flag_popular($nid) {
  if (is_popular($nid)) {
    $flag_popular = flag_get_flag('popular');
    $flag_popular->flag('flag', $nid);
    
    $flag_worth_checking = flag_get_flag('worth_checking');
    $flag_worth_checking->flag('flag', $nid);
  }
  else {
    $flag_popular = flag_get_flag('popular');
    $flag_popular->flag('unflag', $nid);
  }
}

function is_popular($nid) {
  $comment_value = variable_get('idea_popular_comment_points', 0);
  $vote_value = variable_get('idea_popular_vote_points', 0);
  $total_value = variable_get('idea_popular_total', 0);
  $period = variable_get('idea_popular_period', 0);
  $time_ago = time() - $period;
  $comments = db_result(
    db_query(
  		"SELECT COUNT(*) 
  		FROM {comments} 
  		WHERE nid = $nid 
  		AND timestamp >= %d", 
      $time_ago
    )
  );
  $votes = db_result(
    db_query(
    	"SELECT COUNT(*) 
    	FROM {votingapi_vote} 
    	WHERE content_id = $nid 
    	AND timestamp >= %d", 
      $time_ago
    )
  );
  
  $comments = $comments * $comment_value;
  $votes = $votes * $vote_value;
  
  return $comments + $votes >= $total_value ? TRUE : FALSE;
}

function ideal_popular_cron() {
 if (!variable_get('ideal_last_cron', time())) {
    variable_set('ideal_last_cron', time());
  }
  if (variable_get('last_cron', time()) <= time() - (60*60*24))  {
    _ideal_check_all_ideas();
  } 
}

//get all ideas and send them to check and flag them as popular.
function _ideal_check_all_ideas() {
  $result = db_query("SELECT nid FROM {node} WHERE type = '%s'", 'idea');
  while ($fetch = db_fetch_array($result)) {
    ideal_flag_popular($fetch['nid']);
  }
}

//get all popular ideas and send them check if needs to unflag them.
function _ideal_check_popular_ideas() {
  $result = db_query("SELECT content_id FROM {flag_content} WHERE fid = %d", POPULAR_FLAG);
   while ($fetch = db_fetch_array($result)) {
      ideal_flag_popular($fetch['content_id']);
    }
}
